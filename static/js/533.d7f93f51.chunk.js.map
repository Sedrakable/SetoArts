{"version":3,"file":"static/js/533.d7f93f51.chunk.js","mappings":"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","sources":["webpack://setoxarts/./src/components/pages/blocks/WorkBlock/WorkBlock.module.scss?854d","components/pages/blocks/WorkBlock/WorkBlock.tsx","components/pages/AboutPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"workBlock\":\"WorkBlock_workBlock__xgPX4\",\"container\":\"WorkBlock_container__b-UQk\",\"imgWrapper\":\"WorkBlock_imgWrapper__qw0Ag\",\"content\":\"WorkBlock_content__7mO1d\",\"title\":\"WorkBlock_title__V8a0r\",\"grid\":\"WorkBlock_grid__r+Kn4\"};","import React, { FC } from \"react\";\r\nimport styles from \"./WorkBlock.module.scss\";\r\nimport cn from \"classnames\";\r\nimport FlexDiv from \"../../../reuse/FlexDiv\";\r\nimport { Heading } from \"../../../reuse/Heading\";\r\nimport { Block } from \"../../containers/Block\";\r\nimport { IWork, IWorkBlock, LocalPaths } from \"../../../../data.d\";\r\nimport { SanityImage } from \"../../../reuse/SanityImage/SanityImage\";\r\nimport { useAtom } from \"jotai\";\r\nimport { modalData } from \"../../../reuse/Modal\";\r\nimport { langData } from \"../../../navbar/LangSwitcher/LangSwitcher\";\r\nimport { getTranslations } from \"../../../../helpers/langUtils\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Work: FC<IWork> = (props) => {\r\n  const [, setModalOpen] = useAtom(modalData);\r\n  const [lang] = useAtom(langData);\r\n  const navigate = useNavigate();\r\n\r\n  const handleModalOpen = () => {\r\n    setModalOpen({\r\n      handleClose: () => setModalOpen(null),\r\n      ...props,\r\n    });\r\n    // Update the URL programmatically when opening the modal\r\n    const newPath = `/${lang}${LocalPaths.ABOUT}/${props.slug.current}`;\r\n    navigate(newPath);\r\n  };\r\n\r\n  return (\r\n    <FlexDiv width100 className={styles.container} onClick={handleModalOpen}>\r\n      <div className={styles.imgWrapper}>\r\n        <SanityImage {...props?.thumbnailImage} res={40} />\r\n      </div>\r\n      <FlexDiv\r\n        width100\r\n        height100\r\n        className={styles.content}\r\n        padding={{ horizontal: [4], top: [4], bottom: [5] }}\r\n        gapArray={[3]}\r\n      >\r\n        <Heading\r\n          font=\"Seto\"\r\n          level=\"2\"\r\n          as=\"h3\"\r\n          color=\"white\"\r\n          textAlign=\"center\"\r\n          className={styles.title}\r\n        >\r\n          {props.title}\r\n        </Heading>\r\n      </FlexDiv>\r\n    </FlexDiv>\r\n  );\r\n};\r\n\r\nexport const WorkBlock: React.FC<IWorkBlock> = ({ works }) => {\r\n  const [lang] = useAtom(langData);\r\n  const translations = getTranslations(lang);\r\n\r\n  return (\r\n    <Block title={translations.blockTitles.work} variant=\"grid\" shadow={false}>\r\n      <FlexDiv\r\n        gapArray={[4]}\r\n        flex={{ y: \"flex-start\" }}\r\n        width100\r\n        className={cn(styles.workBlock)}\r\n        wrap\r\n      >\r\n        {works?.map((work: IWork, key: number) => {\r\n          return <Work {...work} key={key} />;\r\n        })}\r\n      </FlexDiv>\r\n    </Block>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { IAbout, IWorkBlock, IWork, ICustomImage, IValues } from \"../../data\";\r\nimport { Inspired } from \"./blocks/Inspired/Inspired\";\r\nimport { About } from \"./blocks/About/About\";\r\nimport { ImageGrid } from \"./blocks/ImageGrid/ImageGrid\";\r\nimport { WorkBlock } from \"./blocks/WorkBlock/WorkBlock\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAtom } from \"jotai\";\r\nimport { ModalProps, modalData } from \"../reuse/Modal\";\r\nimport { Values } from \"./home/Values/Values\";\r\n\r\nexport interface AboutPageProps {\r\n  about: IAbout;\r\n  values: IValues;\r\n  work: IWorkBlock;\r\n}\r\n\r\nexport const AboutPage: React.FC<AboutPageProps> = (props) => {\r\n  const [workImages, setWorkImages] = useState<ICustomImage[]>([]);\r\n  const [, setModalOpen] = useAtom(modalData);\r\n  const { slug } = useParams();\r\n  useEffect(() => {\r\n    if (slug) {\r\n      setModalOpen({\r\n        ...(props.work.works.find(\r\n          (work) => work.slug.current === slug\r\n        ) as ModalProps),\r\n        handleClose: () => setModalOpen(null),\r\n      });\r\n    }\r\n  }, [slug, setModalOpen, props.work.works]);\r\n\r\n  useEffect(() => {\r\n    const getAllWorkImages = (works: IWork[]) => {\r\n      const customImages: ICustomImage[] = works.flatMap((work) => {\r\n        return work.customImages;\r\n      });\r\n\r\n      return customImages;\r\n    };\r\n\r\n    if (props?.work?.works) {\r\n      setWorkImages(getAllWorkImages(props?.work?.works as IWork[]));\r\n    }\r\n  }, [props]);\r\n  return (\r\n    props && (\r\n      <>\r\n        <About {...props.about} />\r\n        <WorkBlock {...props.work} />\r\n        <Values {...props.values} />\r\n        <ImageGrid customImages={workImages} maxImages={24} randomize />\r\n        <Inspired />\r\n      </>\r\n    )\r\n  );\r\n};\r\n"],"names":["Work","props","setModalOpen","useAtom","modalData","lang","langData","navigate","useNavigate","_jsxs","FlexDiv","width100","className","styles","onClick","handleModalOpen","handleClose","newPath","concat","LocalPaths","ABOUT","slug","current","children","_jsx","SanityImage","thumbnailImage","res","height100","padding","horizontal","top","bottom","gapArray","Heading","font","level","as","color","textAlign","title","WorkBlock","_ref","works","translations","getTranslations","Block","blockTitles","work","variant","shadow","flex","y","cn","wrap","map","key","_createElement","AboutPage","workImages","setWorkImages","useState","useParams","useEffect","find","_props$work","_props$work2","flatMap","customImages","_Fragment","About","about","Values","values","ImageGrid","maxImages","randomize","Inspired"],"sourceRoot":""}