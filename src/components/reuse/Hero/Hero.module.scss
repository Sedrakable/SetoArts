@use "@/styles/mixins.scss" as *;

// Vertical Triangle Mixin (requires --grad-angle and --grad-percent)
@mixin vertTriangle() {
  --x-move: tan(var(--grad-angle)) * 100vh;
  content: "";
  position: absolute;
  width: calc(var(--grad-percent) + (var(--x-move) / 2));
  height: 100%;
  clip-path: polygon(0 0, 100% 0, calc(100% - (var(--x-move))) 100%, 0% 100%);
  background-color: var(--white);
  z-index: 2;
}

// HeroV3 Styles
.heroV3 {
  // Shared Variables (used in calculations or multiple places)
  @include vari(--grad-angle, 50deg, 10deg, 10deg, 10deg);
  @include vari(--grad-percent, 10%, 45%, 50%, 50%);
  @include vari(--image-width, 100%, 55vw, 55vw, 55vw);
  @include vari(--graphic-width, 100px, 140px, 200px, 260px);

  @include vari(max-height, calc(100vw * 1.5), 60vw, 56.25vw, 56.25vw);
  min-height: fit-content;
  height: 100vh;
  background-color: var(--white);
  position: relative;

  .backgroundContainer {
    position: relative;
    width: var(--image-width);
    height: 100%;
    min-height: 100vw;
    overflow: hidden;
    margin-top: calc(var(--pad-8) * -1);

    .backgroundImage {
      width: 100%;
      height: auto;
      object-fit: cover;
    }

    .message {
      position: absolute;
      @include vari(width, 30vw, 16vw, 18vw, 20vw);
      @include vari(font-size, 24px, 24px, 32px, 40px);

      @include vari(bottom, 55%, 60%, 65%, 70%);

      right: 2vw;
      transform: rotate(-10deg);
    }

    &::before {
      @include vertTriangle();
      top: 0;
      left: -1px;
      height: 100%;
      z-index: 1;
      pointer-events: none;
    }
  }

  .backgroundImage,
  .foregroundImage {
    width: var(--image-width);
    max-height: 106%;
    height: auto;
    position: absolute;
    bottom: 0;
    right: 0;
    transform: translateY(5%);
    object-fit: cover;
  }

  .foregroundImage {
    z-index: 1;
  }

  .logo {
    width: var(--image-width);
  }

  .titles {
    @include vari(width, 100%, 50%, 50%, 50%);
  }

  .stroke {
    @include vari(height, 100px, 120px, 160px, 240px);
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 65%) rotate(5deg);
    width: 120%;
    z-index: 1;
  }

  .graphic {
    position: absolute;
    left: 40%;
    transform: translateX(-50%) rotate(10deg);
    width: var(--graphic-width);
    bottom: calc(var(--graphic-width) / 8);
    path {
      &:nth-last-child(1) {
        fill: var(--black);
      }
    }
  }

  @media (min-width: $tablet) {
    flex-direction: row !important;
    .backgroundContainer {
      position: absolute;
      top: 50%;
      right: 0;
      transform: translateY(-50%);
      min-height: unset;
      margin-top: unset;
    }
  }
}

// Hero Styles
.hero {
  // Shared Variables (used in multiple places)
  @include vari(--ratio, 3/4, 1, unset, unset);
  @include vari(--left-flex, unset, unset, 1, 1);
  @include vari(--right-flex, 1, 1, 2, 2);
  @include vari(--logo-width, 85%, 90%, auto, auto);
  @include vari(--desc-width, 100%, 100%, 100%, 50%);
  @include vari(--bg-size, 350%, 150%, 175%, 200%);
  @include vari(--logo-offset, 0px, 0px, 50px, 70px);

  @include flexColumn;
  position: relative;
  width: 100%;
  box-sizing: border-box;
  height: auto;
  overflow: hidden;

  .quote {
    @include flex(flex-start);
    width: 100% !important;
  }

  .left {
    @include flexColumn;
    background: var(--white);
    flex: var(--left-flex);
    width: 100%;
    aspect-ratio: var(--ratio);
    z-index: 1;
    position: relative;

    &:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: url("/photos/Textures/FabricTexture.webp");
      background-size: var(--bg-size);
      background-position: bottom;
      background-repeat: repeat-x;
    }

    svg {
      position: relative;
      width: var(--logo-width);
    }
  }

  .right {
    position: relative;
    width: 100%;
    height: 100%;
    flex: var(--right-flex);
    z-index: 0;

    figure {
      position: absolute !important;
      width: 100% !important;
      object-fit: cover;
      filter: grayscale(100%);
      aspect-ratio: 1;
      overflow: hidden;
    }

    .container {
      z-index: 1;
      height: 100%;
      box-sizing: border-box;
      max-width: fit-content;

      .description {
        width: var(--desc-width);
      }

      &::before {
        @include absoluteFill;
        content: "";
        background: linear-gradient(
          to bottom,
          rgba(0, 0, 0, 0.9),
          rgba(0, 0, 0, 0.5)
        );
      }
    }
  }

  @media (min-width: $laptop) {
    height: calc(100vh - var(--navbar-height));
    flex-direction: row;

    .quote {
      width: auto;
      position: absolute;
      left: 0;
      bottom: 0;
      z-index: 2;
    }

    .left {
      height: 100%;
      max-height: auto;
      padding-bottom: unset !important;
      border-bottom: 3px solid var(--black);

      svg {
        position: absolute;
        right: calc(var(--logo-offset) * -1);
        left: var(--logo-offset);
        top: 15%;
      }

      &:before {
        aspect-ratio: 1;
        width: auto;
        transform: rotate(90deg);
      }
    }
  }
}
