@use "@/styles/mixins.scss" as *;

// Define responsive design variables

// Process steps container
.process {
  position: relative;
  flex: 3;
  // overflow-y: auto; // Enable vertical scrolling
  scroll-snap-type: y mandatory; // Enables snapping
  // height: 100vh; // Full height to allow scrolling

  &::-webkit-scrollbar {
    display: none; // Optional: Hide scrollbar for a cleaner look
  }
}

// Individual slide styling
.slide {
  @include vari(--circle-size, 72px, 72px, 72px, 128px);
  @include vari(--circle-border-width, 4px, 4px, 4px, 6px);
  @include vari(
    --container-height,
    66vh,
    66vh,
    calc(100vh - 160px),
    calc(100vh - 200px)
  );
  // $padding-top: 128px;
  position: relative;
  z-index: 1;
  height: var(--container-height);
  scroll-snap-align: start; // Ensures each slide snaps into place

  .content {
    // background-color: red;

    position: relative;
    > * {
      z-index: 1;
    }
    &::before {
      content: "";
      position: absolute;
      inset: calc(var(--pad-5) * -1);
      background: white;
      filter: blur(var(--pad-4));
      z-index: 0;
    }
  }
  &:last-child {
    height: fit-content;
    &::before {
      content: none !important;
    }
  }

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: calc((var(--circle-size) - var(--circle-border-width)) / 2);
    width: var(--circle-border-width);
    height: 100%;
    background: var(--yellow);
    z-index: -1;
  }

  // Adjustments for first and last steps
  &:first-child::before {
    bottom: 0;
    // top: $padding-top;
    height: auto;
  }

  &:last-child::before {
    bottom: auto;
    top: 0;
    // height: $padding-top;
  }

  // Numbered circle
  .number {
    width: var(--circle-size);
    height: var(--circle-size);
    min-width: var(--circle-size);
    border: var(--circle-border-width) solid var(--yellow);
    border-radius: 50%;
    background-color: var(--white);
    z-index: 1;
  }

  // // Text content
  // p {
  //   @include paragraphMaxLines(var(--paragraph-max-lines));
  // }

  .title {
    word-wrap: break-word;
  }
}

// Video container
.video {
  position: sticky;
  --ratio: 9 / 16;
  @include flex;

  @include vari(--video-width, 65vw, 65vw, 500px, 640px);
  @include vari(margin-top, 0, 0, -300px, -400px);
  @include vari(
    margin-bottom,
    calc(-1 * var(--video-width) / (var(--ratio))),
    calc(-1 * var(--video-width) / (var(--ratio))),
    0
  );
  // top: 0;
  bottom: unset;
  right: 0;
  width: var(--video-width);
  aspect-ratio: var(--ratio);

  // transform: translateY(-50%);
  // transform: translateY(var(--y-offset));
  @include vari(z-index, 0, 0, 2, 2);
  @include vari(--trad-stop, 140px, 280px, 120px, 180px);
  background: linear-gradient(
    0deg,
    transparent 0%,
    var(--white) var(--trad-stop)
  );
  .frame {
    position: absolute !important;
    top: 0 !important;
    bottom: 0 !important;
    left: 50% !important;
    transform: translateX(-50%);
    width: var(100%) !important;
    height: 100% !important;
    object-fit: contain !important;
    pointer-events: none; /* Prevents interaction */
  }

  &.branding {
    @include vari(top, 0, -200px, -200px, -240px);
  }

  &.web-design {
    @include vari(top, 0, -300px, -200px, -240px);
  }

  &.wood {
    @include vari(top, 200px, -200px, -160px, -200px);
  }
}

// Container for SVGs in desktop view
.svgs {
  flex: 1;
  position: relative;
  min-height: 100%;

  .one {
    position: absolute;
    left: 30px;
    top: 30px;
  }

  .two {
    position: absolute;
    left: 0px;
    top: 50%;
    transform: translateY(-50%);
  }

  .three {
    position: absolute;
    left: 40px;
    bottom: 0;
  }
}
