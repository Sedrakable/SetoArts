@use "@/styles/mixins.scss" as *;

// Define responsive design variables
@mixin vars() {
  --ratio: 4/3;
  --circle-size: 72px;
  --circle-border-width: 4px;
  --paragraph-max-lines: 8;
  --svg-height: auto;
  --container-height: 600px;

  @media (min-width: $laptop) {
    --svg-height: 380px;
  }

  @media (min-width: $desktop) {
    --circle-border-width: 6px;
    --circle-size: 128px;
    --paragraph-max-lines: 12;
    --svg-height: 420px;
  }
}

// Embla carousel container
.embla {
  position: relative;
  margin: auto;
  flex: 3;
  height: var(--container-height);
  overflow: hidden;

  &.active {
    // Visual indication that the component is active
    box-shadow: 0 0 0 2px var(--yellow);
    border-radius: 8px;
  }

  // Gradient overlay to indicate scrollable area
  &::after {
    @include absoluteFill;
    content: "";
    background: linear-gradient(
      0deg,
      var(--white) 0%,
      transparent 20%,
      transparent 80%,
      var(--white) 100%
    );
    pointer-events: none;
  }
}

// Process is active class - applied to the Block component
.processActive {
  outline: 2px solid var(--yellow);
  outline-offset: 4px;
  background-color: var(--white);
  z-index: 5;
}

// Embla carousel slide container
.embla__container {
  display: flex;
  flex-direction: column;
  touch-action: pan-x pinch-zoom;
  height: var(--container-height);
}

// Individual slide styling
.embla__slide {
  flex: 0 0 100%;
  transform: translate3d(0, 0, 0);
  min-height: calc(var(--container-height) * 0.75);

  // Yellow vertical line connecting steps
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: calc((var(--circle-size) - var(--circle-border-width)) / 2);
    width: var(--circle-border-width);
    height: 100%;
    background: var(--yellow);
    z-index: -1;
  }

  // Adjustments for first and last steps
  &:first-child::before {
    bottom: 0;
    top: auto;
    height: 50%;
  }

  &:last-child::before {
    bottom: auto;
    top: 0;
    height: 50%;
  }
}

// Video container
.video {
  flex: 2;
}

// Process steps container
.processes {
  position: relative;
}

// Container for SVGs in desktop view
.svgs {
  flex: 1;
  position: relative;
  min-height: 100%;

  .one {
    position: absolute;
    left: 30px;
    top: 30px;
  }

  .two {
    position: absolute;
    left: 0px;
    top: 50%;
    transform: translateY(-50%);
  }

  .three {
    position: absolute;
    left: 40px;
    bottom: 0;
  }
}
.container {
  z-index: 1;

  // Numbered circle
  .number {
    width: var(--circle-size);
    height: var(--circle-size);
    min-width: var(--circle-size);
    border: var(--circle-border-width) solid var(--yellow);
    border-radius: 50%;
    background-color: var(--white);
  }

  // Text content
  p {
    @include paragraphMaxLines(var(--paragraph-max-lines));
  }

  .title {
    word-wrap: break-word;
  }

  .tags {
    gap: var(--pad-3);
  }

  .imgWrapper {
    aspect-ratio: var(--ratio);
    flex: 0 0 auto;
    width: 100%;
    max-width: 100%;
  }
}

.wrapper {
  @include vars;
  width: 100%;

  // Step container styling

  // SVG illustrations
  svg {
    height: var(--svg-height);
    z-index: 1;
    align-self: center;
  }
}
