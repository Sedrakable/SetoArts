@use "@/styles/mixins.scss" as *;

@mixin vars() {
  --left-graphic-width: 120px;
  --left-graphic-left: 5%;
  --right-graphic-width: var(--left-graphic-width);
  --right-graphic-right: 5%;
  --logo-width: 100px;
  --gapfill: 0.7px;
  --trans-time: 0.5s;
  --content-width: 100%;
  --desc-padding-bottom: var(--pad-3);
  --desc-max-lines: 3;
  --background-image-width: 100vw;
  @media (min-width: $tablet) {
    --left-graphic-left: 5%;
    --left-graphic-width: 230px;
    --right-graphic-right: 8%;
    --desc-max-lines: 8;
  }

  @media (min-width: $laptop) {
    --left-graphic-width: 300px;
    --right-graphic-width: calc(var(--left-graphic-width) * 0.9);
    --left-graphic-left: 0;
    --right-graphic-right: 5%;
    --logo-width: 80px;
    --content-width: 25vw;
    --desc-max-lines: unset;
    --background-image-width: 50vw;
  }

  @media (min-width: $desktop) {
    --desc-padding-bottom: var(--pad-4);
    --left-graphic-width: 400px;
    --logo-width: 100px;
    --content-width: 25vw;
  }
}

@mixin transition($properties...) {
  transition: var(--trans-time) ease-in-out;
  transition-property: $properties;
}

@mixin vertTriangle($deg: 80deg, $flip: false, $color: var(--white)) {
  content: "";
  position: absolute;
  aspect-ratio: calc(1 / tan($deg));
  height: calc(50% + ((var(--gapfill) * 2) / cos($deg)));
  clip-path: polygon(0% 100%, 100% 100%, 100% 0%);
  width: unset;
  background-color: $color;
  z-index: 2;
  @if $flip {
    transform: scale(-1, -1);
  }
}

@mixin horiTriangle($deg: 80deg, $flip: false, $color: var(--white)) {
  content: "";
  position: absolute;
  aspect-ratio: calc(tan($deg));
  width: calc(50% + ((var(--gapfill)) / cos($deg)));
  clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
  background-color: $color;
  z-index: 2;
  @if $flip {
    transform: scale(-1, -1);
  }
}

.landingContainer {
  @include vars;
  height: 100vh;
  position: relative;
  background: var(--yellow);

  .landingSide {
    position: relative;
    overflow: hidden;
    width: 100vw;
    @include transition(width); // Only transition width here

    .content {
      z-index: 1;
      max-width: var(--content-width);
      @include transition(max-width, opacity); // For hover moves

      .desc {
        display: -webkit-box;
        -webkit-line-clamp: var(--desc-max-lines); /* Limit to 3 lines */
        -webkit-box-orient: vertical;
        overflow: hidden;
        margin-bottom: var(--desc-padding-bottom);
        text-overflow: ellipsis;
      }
    }
    .backgroundImage {
      position: absolute !important;
      top: 0;
      width: var(--background-image-width);
      max-width: var(--background-image-width);
      height: 100%;
      z-index: 0;
      opacity: 0.25;
      @include transition(opacity);

      img {
        filter: grayscale(1);
        z-index: 1;
        @include transition(filter);
      }
      &:after {
        content: "";
        position: absolute;
        top: 0;
        width: var(--background-image-width);
        height: 100%;
        z-index: 2;
        opacity: 1;
        @include transition(opacity, width);
      }
    }

    .graphic {
      position: absolute;
      opacity: 0.8;
      mix-blend-mode: luminosity;
      @include transition(
        opacity,
        left,
        right,
        top,
        bottom,
        scale
      ); // For hover moves

      path {
        &:nth-last-child(2) {
          fill: transparent;
        }
      }
    }
  }

  .left {
    background: var(--white);

    .backgroundImage {
      left: 0 !important;
      right: unset !important;
      &:after {
        background: linear-gradient(90deg, transparent 0%, var(--white) 66%);
        left: 0;
      }
    }
    &::before {
      @include horiTriangle(80deg, false, var(--black));
      bottom: calc(-1 * var(--gapfill));
      left: calc(-1 * var(--gapfill));
    }
    .tags {
      transform: rotate(90deg);
      left: 0;
      top: 0;
    }
    .graphic {
      width: var(--left-graphic-width);
      left: var(--left-graphic-left);
      top: -10%;
      bottom: auto;
      transform: rotate(160deg);
      path {
        &:nth-last-child(1) {
          fill: var(--black);
        }
      }
    }
  }

  .right {
    background: var(--black);

    .backgroundImage {
      left: unset !important;
      right: 0;
      &:after {
        background: linear-gradient(-90deg, transparent 0%, var(--black) 66%);
        right: 0;
      }
    }
    &::before {
      @include horiTriangle(80deg, true, var(--white));
      top: calc(-1 * var(--gapfill));
      right: calc(-1 * var(--gapfill));
    }
    .tags {
      transform: rotate(-90deg);
      right: 0;
      bottom: 0;
    }
    .graphic {
      width: var(--right-graphic-width);
      right: var(--right-graphic-right);
      bottom: -2%;
      transform: rotate(-15deg);
      path {
        &:nth-last-child(1) {
          fill: var(--white);
        }
      }
    }
  }

  .tags {
    position: absolute;
    width: auto;
    aspect-ratio: 1;

    .tag {
      font-size: var(--paragraph-regular);
      line-height: var(--paragraph-regular-line);

      @media (min-width: $desktop) {
        font-size: var(--paragraph-big);
        line-height: var(--paragraph-big-line);
      }
      @include transition(color);
    }
  }

  .logo {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    margin-left: 1px;
    z-index: 2;
    width: var(--logo-width);
    @include transition(left); // For hover shifts

    path:nth-child(1) {
      fill: var(--yellow);
    }
    path:nth-child(2) {
      fill: var(--grey);
    }
    path:nth-child(3) {
      fill: var(--yellow);
    }
  }
}

@media (min-width: $laptop) {
  .landingContainer {
    flex-direction: row !important;
    .landingSide {
      width: 50vw;
      .backgroundImage {
        &:before {
          height: 100% !important;
          z-index: 0;
        }
      }
    }
    .left {
      &::before {
        @include vertTriangle(80deg, false, var(--black));
        bottom: calc(-1 * var(--gapfill));
        right: calc(-1 * var(--gapfill));
        left: unset !important;
      }
      .backgroundImage {
        &:before {
          @include vertTriangle(80deg, false, var(--white));
          right: -1px;
        }
      }
      .graphic {
        right: auto;
        top: auto;
        bottom: -5%;
        transform: rotate(30deg);
      }
    }
    .right {
      &::before {
        @include vertTriangle(80deg, true, var(--white));
        top: calc(-1 * var(--gapfill));
        left: calc(-1 * var(--gapfill));
        right: unset !important;
      }
      .backgroundImage {
        &:before {
          @include vertTriangle(80deg, true, var(--black));
          left: -1px;
        }
      }
      .graphic {
        right: var(--right-graphic-right);
        left: auto;
        top: -1%;
        bottom: auto;
        transform: rotate(-15deg);
      }
    }
    .logo {
      path:nth-child(1) {
        fill: var(--black);
      }
      path:nth-child(2) {
        fill: var(--grey);
      }
      path:nth-child(3) {
        fill: var(--white);
      }
    }
  }
}

@mixin hover-side(
  $width,
  $padding-side,
  $graphic-pos,
  $bg-gradient,
  $graphic-color
) {
  width: $width;
  padding-#{$padding-side}: 64px !important; // Matches your hardcoded value
  .backgroundImage {
    opacity: 1;
    img {
      filter: grayscale(0);
    }
    &:after {
      opacity: 0;
    }
  }

  .graphic {
    opacity: 1;
    mix-blend-mode: normal;
    #{$graphic-pos}: 45%;
    path {
      &:nth-last-child(2) {
        fill: $graphic-color;
      }
    }
  }
}

.leftHover {
  @include vars;
  .left {
    @include hover-side(
      75vw,
      right,
      left,
      linear-gradient(-90deg, transparent 70%, var(--black) 100%),
      var(--white)
    );
  }
  .left .graphic {
    opacity: 1;
    mix-blend-mode: normal;
    left: 45%;
    right: auto;
    top: auto;
    bottom: -5%; // Keep it consistent or adjust
  }

  .right {
    width: 25vw;
    padding-left: 64px !important; //set vlaue
    .backgroundImage {
      opacity: 0;
    }
    .content {
      opacity: 0;
      transition-duration: calc(var(--trans-time) / 2);
    }
    .graphic {
      top: 30%;
      right: 10%;
      bottom: auto;
      left: auto;
      scale: 0.75;
    }
  }
  .logo {
    left: 75%;
  }
  .tag {
    color: var(--white) !important;
  }
}

.rightHover {
  @include vars;
  .right {
    @include hover-side(
      75vw,
      left,
      right,
      linear-gradient(90deg, transparent 70%, var(--black) 100%),
      var(--black)
    );
  }
  .left {
    width: 25vw;
    padding-right: 64px !important; //set vlaue
    .content {
      opacity: 0;
      transition-duration: calc(var(--trans-time) / 2);
    }
    .backgroundImage {
      opacity: 0;
    }
    .graphic {
      bottom: 30%;
      left: 5%;
      top: auto; // Clear top to avoid conflict
      right: auto; // Clear right to avoid conflict
      scale: 0.75;
    }
  }
  .logo {
    left: 25%;
  }
}
